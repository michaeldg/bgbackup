############################################

# bgbackup configuration file

# Which backup utility is being used, MariaBackup or Xtrabackup?
# MariaDB Backup = 1
# XtraBackup = 2
backuptool=1

# Some times the backuptool requires a high amount of open files.
# Use this parameter to set the open file limit to a certain value, 
# we recommend 20.000 to make sure there is enough.
openfilelimit=0

# for multi-instance support, a different defaults file may be specified (optional, default os default)
# defaults_file=/etc/my.cnf
# To avoid passing the password on the CLI, we recommend to add the password in the defaults file, and !include /etc/my.cnf (or equivalent) from there. defaults-extra-file causes some issues, custom socket path and port is not honored.

# If you really want to use defaults-extra-file, this is the way:
# defaults_extra_file=/root/.my.cnf

# For multi-instance support, you can optionally specify a name of the instance. This name is used in the history table and in the log file name.
# instance_name=my_33062

# MariaDB/MySQL/Percona host (optional)
#host=127.0.0.1

# MariaDB/MySQL/Percona host port (optional)
#hostport=3306

# MariaDB/MySQL/Percona socket
# socket=/var/lib/mysql/mysql.sock

# MariaDB/MySQL/Percona backup username
backupuser=testuser

# MariaDB/MySQL/Percona backup user password
backuppass=testpass

# for multi-instance support, a different defaults file may be specified (optional, default os default)
# backuphist_defaults_file=/etc/my.cnf
# To avoid passing the password on the CLI, we recommend to add the password in the defaults file, and !include /etc/my.cnf (or equivalent) from there. defaults-extra-file causes some issues, custom socket path and port is not honored.

# If you really want to use defaults-extra-file for the backup history server connection, this is the way:
# backuphist_defaults_extra_file=/root/.my.cnf

# MariaDB/MySQL/Percona host for backup history
backuphisthost=localhost

# MariaDB/MySQL/Percona socket for backup history
# backuphistsocket=/var/lib/mysql/mysql.sock

# MariaDB/MySQL/Percona port for backup history
#backuphistport=3306

# MariaDB/MySQL/Percona user for backup history
backuphistuser=mariadbbackup

# MariaDB/MySQL/Percona password for backup history
backuphistpass=testpass

# MariaDB/MySQL/Percona schema for backup history
backuphistschema=mdbutil

# If server is monitored by MONyog, should we disable alerts?
monyog=no

# The name of the server being backed up as setup in MONyog
monyogserver=

# MONyog username
monyoguser=

# MONyog password
monyogpass=

# MONyog host/ip
monyoghost=

# MONyog port
monyogport=

# Day of week to do full backup. Set to "Everyday" to do full backup everyday (subsequent daily backups will be incremental)
fullbackday=Everyday
# If you want every backup to be a full backup you can specify "Always" as fullbackupday.

# Differential does incremental backup based on the last full backup instead of last full or incremental
differential=yes

# Number of full daily backups to keep
keepdaily=3

# Number of full weekly backups to keep
keepweekly=4

# Number of full monthly backups to keep
keepmonthyl=3

# Number of full yearly backups to keep
keepyearly=3

keepbkuptblnum=1

# Number of log files to keep.
keeplognum=1000

# Number of days to keep failed backups
keepfaileddays=365

# Full path to backup directory root
backupdir=/backups

# Path to keep logs
logpath=/var/log

# Log to syslog
syslog=no

# Backup type (directory or archive)
bktype=directory

# Archive type (tar or xbstream) for archive backup type
# arctype=tar

# Used for parallel and compress
threads=4

# Use parallel threads for backup?
parallel=yes

# Encrypt backup?
encrypt=yes

# Full path to encryption key
cryptkey=/etc/my.cnf.d/backupscript.key

# Compress backup?
compress=yes

# Compression utility used for archives, for now gzip or pigz (parallel gzip) are supported
# For standalone directories, qpress is always used
computil=gzip

# By default, xtrabackup will lock all tables to create a consistent backup of non-transactional
# tables. Enabled nolock to disable this behaviour.
# WARNING: Only disable locking if you do not have or do not care about your non-transactional tables.
nolock=no

# By default, xtrabackup will backup RocksDB tables in the phase after InnoDB. 
# If you don't use RocksDB you can disable this to speed up the backup process.
rocksdb=yes

# Include Galera/XtraDB Cluster info and enable wsrep_desync to avoid flow control during backup.
# When the backup is finished, wait for wsrep_local_recv_queue to drop to 0 before
# disabling wsrep_desync. 
galera=no

# Only start when there are enough Galera/XtraDB Cluster nodes available. 
# Only applies when 'galera'='yes'.
galera_minimum_nodes=3

# Run a preflight check script. If this script does not echo "OK" the backup process does not start.
# Input parameter: Path to bgbackup configuration file
preflight_script="echo 'OK' || echo"
# If the preflight check script produces any output other then 'OK', the backup will not run.
# If the preflight check script output does not start with 'NO_ERROR;' the backup run will have result ERROR and produce stderr output.

# Include slave info?
# WARNING: If slave info is included and nolock is enabled, bgbackup will enable safe-slave-backup. 
# (safe slave backups will temporarily pause replication. Please inspect the documentation if your application cannot handle stale reads.)
slave=no

# Comma separated list of email address to be notified.
maillist=admin@example.com

# Email subject prefix
mailsubpre="[BGBackup]"

# Email (all or failure)
mailon=all

# Run command(s) after backup, for example: run_on_success=/usr/local/bin/success.sh
# (leave empty if you do not want to run anything)
# If backup succeeded
run_after_success=
# If backup failed
run_after_fail=

# Debug prints all variables to the commandline when script is ran.
# This can be a security risk. Set to yes to enable.
debug=no

# Verbosity prints the log to stdout as well as to the log file
verbose=no


############################################
